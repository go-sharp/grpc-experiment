// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: todo.proto
// </auto-generated>
#pragma warning disable 1591
#region Designer generated code

using System;
using System.Threading;
using System.Threading.Tasks;
using grpc = global::Grpc.Core;

namespace GrpcExample.Services {
  /// <summary>
  /// TodoService
  /// </summary>
  public static partial class TodoService
  {
    static readonly string __ServiceName = "GrpcExample.Services.TodoService";

    static readonly grpc::Marshaller<global::GrpcExample.Services.Todo> __Marshaller_Todo = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::GrpcExample.Services.Todo.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::GrpcExample.Services.TodoRequest> __Marshaller_TodoRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::GrpcExample.Services.TodoRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::GrpcExample.Services.DeleteRequest> __Marshaller_DeleteRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::GrpcExample.Services.DeleteRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::GrpcExample.Services.Empty> __Marshaller_Empty = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::GrpcExample.Services.Empty.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::GrpcExample.Services.Todos> __Marshaller_Todos = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::GrpcExample.Services.Todos.Parser.ParseFrom);

    static readonly grpc::Method<global::GrpcExample.Services.Todo, global::GrpcExample.Services.Todo> __Method_Create = new grpc::Method<global::GrpcExample.Services.Todo, global::GrpcExample.Services.Todo>(
        grpc::MethodType.Unary,
        __ServiceName,
        "Create",
        __Marshaller_Todo,
        __Marshaller_Todo);

    static readonly grpc::Method<global::GrpcExample.Services.Todo, global::GrpcExample.Services.Todo> __Method_Update = new grpc::Method<global::GrpcExample.Services.Todo, global::GrpcExample.Services.Todo>(
        grpc::MethodType.Unary,
        __ServiceName,
        "Update",
        __Marshaller_Todo,
        __Marshaller_Todo);

    static readonly grpc::Method<global::GrpcExample.Services.TodoRequest, global::GrpcExample.Services.Todo> __Method_Get = new grpc::Method<global::GrpcExample.Services.TodoRequest, global::GrpcExample.Services.Todo>(
        grpc::MethodType.Unary,
        __ServiceName,
        "Get",
        __Marshaller_TodoRequest,
        __Marshaller_Todo);

    static readonly grpc::Method<global::GrpcExample.Services.DeleteRequest, global::GrpcExample.Services.Empty> __Method_Delete = new grpc::Method<global::GrpcExample.Services.DeleteRequest, global::GrpcExample.Services.Empty>(
        grpc::MethodType.Unary,
        __ServiceName,
        "Delete",
        __Marshaller_DeleteRequest,
        __Marshaller_Empty);

    static readonly grpc::Method<global::GrpcExample.Services.Empty, global::GrpcExample.Services.Todos> __Method_List = new grpc::Method<global::GrpcExample.Services.Empty, global::GrpcExample.Services.Todos>(
        grpc::MethodType.Unary,
        __ServiceName,
        "List",
        __Marshaller_Empty,
        __Marshaller_Todos);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::GrpcExample.Services.TodoReflection.Descriptor.Services[0]; }
    }

    /// <summary>Base class for server-side implementations of TodoService</summary>
    public abstract partial class TodoServiceBase
    {
      public virtual global::System.Threading.Tasks.Task<global::GrpcExample.Services.Todo> Create(global::GrpcExample.Services.Todo request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::GrpcExample.Services.Todo> Update(global::GrpcExample.Services.Todo request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::GrpcExample.Services.Todo> Get(global::GrpcExample.Services.TodoRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::GrpcExample.Services.Empty> Delete(global::GrpcExample.Services.DeleteRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::GrpcExample.Services.Todos> List(global::GrpcExample.Services.Empty request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Client for TodoService</summary>
    public partial class TodoServiceClient : grpc::ClientBase<TodoServiceClient>
    {
      /// <summary>Creates a new client for TodoService</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      public TodoServiceClient(grpc::Channel channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for TodoService that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      public TodoServiceClient(grpc::CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      protected TodoServiceClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      protected TodoServiceClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      public virtual global::GrpcExample.Services.Todo Create(global::GrpcExample.Services.Todo request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return Create(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::GrpcExample.Services.Todo Create(global::GrpcExample.Services.Todo request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_Create, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::GrpcExample.Services.Todo> CreateAsync(global::GrpcExample.Services.Todo request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return CreateAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::GrpcExample.Services.Todo> CreateAsync(global::GrpcExample.Services.Todo request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_Create, null, options, request);
      }
      public virtual global::GrpcExample.Services.Todo Update(global::GrpcExample.Services.Todo request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return Update(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::GrpcExample.Services.Todo Update(global::GrpcExample.Services.Todo request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_Update, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::GrpcExample.Services.Todo> UpdateAsync(global::GrpcExample.Services.Todo request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return UpdateAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::GrpcExample.Services.Todo> UpdateAsync(global::GrpcExample.Services.Todo request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_Update, null, options, request);
      }
      public virtual global::GrpcExample.Services.Todo Get(global::GrpcExample.Services.TodoRequest request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return Get(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::GrpcExample.Services.Todo Get(global::GrpcExample.Services.TodoRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_Get, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::GrpcExample.Services.Todo> GetAsync(global::GrpcExample.Services.TodoRequest request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return GetAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::GrpcExample.Services.Todo> GetAsync(global::GrpcExample.Services.TodoRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_Get, null, options, request);
      }
      public virtual global::GrpcExample.Services.Empty Delete(global::GrpcExample.Services.DeleteRequest request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return Delete(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::GrpcExample.Services.Empty Delete(global::GrpcExample.Services.DeleteRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_Delete, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::GrpcExample.Services.Empty> DeleteAsync(global::GrpcExample.Services.DeleteRequest request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return DeleteAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::GrpcExample.Services.Empty> DeleteAsync(global::GrpcExample.Services.DeleteRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_Delete, null, options, request);
      }
      public virtual global::GrpcExample.Services.Todos List(global::GrpcExample.Services.Empty request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return List(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::GrpcExample.Services.Todos List(global::GrpcExample.Services.Empty request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_List, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::GrpcExample.Services.Todos> ListAsync(global::GrpcExample.Services.Empty request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return ListAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::GrpcExample.Services.Todos> ListAsync(global::GrpcExample.Services.Empty request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_List, null, options, request);
      }
      /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
      protected override TodoServiceClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new TodoServiceClient(configuration);
      }
    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    public static grpc::ServerServiceDefinition BindService(TodoServiceBase serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_Create, serviceImpl.Create)
          .AddMethod(__Method_Update, serviceImpl.Update)
          .AddMethod(__Method_Get, serviceImpl.Get)
          .AddMethod(__Method_Delete, serviceImpl.Delete)
          .AddMethod(__Method_List, serviceImpl.List).Build();
    }

  }
}
#endregion
