syntax = "proto3";

import "google/api/annotations.proto";
import "protoc-gen-swagger/options/annotations.proto";

package GrpcExample.Services;
option go_package = "grpcproxy";
option (grpc.gateway.protoc_gen_swagger.options.openapiv2_swagger) = {
            info: {
                title: "TodoService"
                description: "An example grpc service"
                version: "1.0.0"
            };
    };

// TodoService
service TodoService {
    rpc Create(Todo) returns (Todo) {
        option (google.api.http) = {
            post: "/v1/todo"
            body: "*"
        };
    }
    rpc Update(Todo) returns (Todo) {
        option (google.api.http) = {
            post: "/v1/todo/{id}"
            body: "*"
        };
    }
    rpc Get(TodoRequest) returns (Todo) {
        option (google.api.http) = {
            get: "/v1/todo/{id}"
        };
    }
    rpc Delete(DeleteRequest) returns (Empty) {
        option (google.api.http) = {
            delete: "/v1/todo/{id}"
        };
    }
    rpc List(Empty) returns (Todos) {
        option (google.api.http) = {
            get: "/v1/todo"
        };
    }
}

// Every Service needs a message and this is an empty message
message Empty {}

message TodoRequest {
    int32 id = 1;
}

message Todo {
    int32 id = 1;
    string text = 2;
    bool done = 3;
}

message Todos {
    repeated Todo todos = 1;
}

message DeleteRequest {
    int32 id = 1;
}
