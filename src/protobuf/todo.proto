syntax = "proto3";

import "google/api/annotations.proto";

package GrpcExample.Services;
option go_package = "grpcproxy";

// TodoService
service TodoService {
    rpc Create(Todo) returns (TodoResponse) {
        option (google.api.http) = {
            post: "/v1/todo"
            body: "*"
        };
    }
    rpc Update(Todo) returns (TodoResponse) {
        option (google.api.http) = {
            post: "/v1/todo/{id}"
            body: "*"
        };
    }
    rpc Get(GetTodoRequest) returns (TodoResponse) {
        option (google.api.http) = {
            get: "/v1/todo/{id}"
        };
    }
    rpc Delete(DeleteRequest) returns (DeleteResponse) {
        option (google.api.http) = {
            delete: "/v1/todo/{id}"
        };
    }
    rpc List(Void) returns (Todos) {
        option (google.api.http) = {
            get: "/v1/todo"
        };
    }
}

// Status of the service operation
enum Status {
    OK = 0; // First Enum must be 0
    FAILED = 1;
}

// Every Service needs a message and this is an empty message
message Void {}

message GetTodoRequest {
    int32 id = 1;
}

message Todo {
    int32 id = 1;
    string text = 2;
    bool done = 3;
}

message Todos {
    repeated Todo todos = 1;
}

message Error {
    string text = 1;
}

message TodoResponse {
    Status status = 1;
    oneof response {
        Todo todo = 2;
        Error error = 3;
    }
}

message DeleteRequest {
    int32 id = 1;
}

message DeleteResponse {
    Status status = 1;
}